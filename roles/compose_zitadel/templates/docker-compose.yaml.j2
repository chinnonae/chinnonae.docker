{{ ansible_managed | comment }}
---
services:
  zitadel:
    image: "{{ compose_zitadel_image_url }}:{{ compose_zitadel_image_tag }}"
    command: start-from-setup --masterkeyFromEnv --config /configs/db.yaml --config /configs/config.yaml --steps /configs/first-instance.yaml --init-projections=true
    environment:
      # https://zitadel.com/docs/self-hosting/manage/configure#runtime-configuration-file
      ZITADEL_MASTERKEY: "{{ compose_zitadel_masterkey }}"
      # WEB CONFIG
      ZITADEL_EXTERNALPORT: "443"
      ZITADEL_EXTERNALSECURE: true
      ZITADEL_TLS_ENABLED: false
      ZITADEL_EXTERNALDOMAIN: "{{ compose_zitadel_host }}"
    depends_on:
      postgres:
        condition: service_started
    networks:
      - default
      - traefik
    labels:
      traefik.enable: "true"
      traefik.http.routers.zitadel.rule: "Host(`{{ compose_zitadel_host }}`)"
      traefik.http.routers.zitadel.entrypoints: "https"
      traefik.http.routers.zitadel.tls: "true"
      traefik.http.routers.zitadel.tls.certresolver: "http01"
      traefik.http.services.zitadel.loadbalancer.server.port: "8080"
      traefik.docker.network: "traefik"
    configs:
      - source: zitadel-db-config
        target: /configs/db.yaml
        mode: 0444
      - source: zitadel-config
        target: /configs/config.yaml
        mode: 0444
      - source: zitadel-first-instance
        target: /configs/first-instance.yaml
        mode: 0444

  postgres:
    image: bitnami/postgresql:16-debian-12
    environment:
      POSTGRESQL_PORT_NUMBER: "{{ compose_zitadel_db_port }}"
      POSTGRESQL_PASSWORD: "{{ compose_zitadel_db_password }}"
      POSTGRESQL_USERNAME: "{{ compose_zitadel_db_username }}"
      POSTGRESQL_DATABASE: "{{ compose_zitadel_db_dbname }}"
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready", "-U", "{{ compose_zitadel_db_username }}"]
    #   interval: '10s'
    #   timeout: '30s'
    #   retries: 5
    #   start_period: '20s'
    volumes:
      - postgres-data:/bitnami/postgresql

configs:
  zitadel-db-config:
    file: ./zitadel-configs/db.yaml
  zitadel-config:
    file: ./zitadel-configs/config.yaml
  zitadel-first-instance:
    file: ./zitadel-configs/first-instance.yaml

volumes:
  postgres-data: {}

networks:
  traefik:
    name: traefik
